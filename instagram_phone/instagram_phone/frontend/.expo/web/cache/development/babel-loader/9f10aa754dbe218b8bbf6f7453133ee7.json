{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\nodejs\\\\instagram_phone\\\\instagram_phone\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts } from \"../redux/actions/index\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/USER/Desktop/nodejs/instagram_phone/instagram_phone/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","fetchUserPosts","createMaterialBottomTabNavigator","MaterialCommunityIcons","FeedScreen","ProfileScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUser, fetchUserPosts } from \"../redux/actions/index\";\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport FeedScreen from './main/Feed'\r\nimport ProfileScreen from './main/Profile'\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\nconst EmptyScreen = () => {\r\n    return (null)\r\n}\r\nexport class Main extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchUserPosts();\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\r\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\r\n                    options={{\r\n                        tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons name=\"home\" color={color} size={26} />\r\n                        ),\r\n                    }} />\r\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\r\n                    listeners={({ navigation }) => ({\r\n                        tabPress: event => {\r\n                            event.preventDefault();\r\n                            navigation.navigate(\"Add\")\r\n\r\n                        }\r\n                    })}\r\n                    options={{\r\n                        tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\r\n                        ),\r\n                    }} />\r\n                <Tab.Screen name=\"Profile\" component={ProfileScreen}\r\n                    options={{\r\n                        tabBarIcon: ({ color, size }) => (\r\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\r\n                        ),\r\n                    }} />\r\n\r\n\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, fetchUserPosts }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\r\n"]},"metadata":{},"sourceType":"module"}