{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\nodejs\\\\instagram_phone\\\\instagram_phone\\\\components\\\\main\\\\Save.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport firebase from 'firebase';\nimport { fetchUserPosts } from \"../../redux/actions/index\";\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      caption = _useState2[0],\n      setCaption = _useState2[1];\n\n  var uploadImage = function uploadImage() {\n    var childPath, uri, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            uri = props.route.params.image;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 7:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                console.log(snapshot);\n                savePostData(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      likesCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.fetchUserPosts();\n      props.navigation.popToTop();\n    });\n  };\n\n  console.log(props);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: props.route.params.image\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Write a Caption . . .\",\n    onChangeText: function onChangeText(caption) {\n      return setCaption(caption);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Save\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/nodejs/instagram_phone/instagram_phone/components/main/Save.js"],"names":["React","useState","TextInput","firebase","fetchUserPosts","require","Save","props","caption","setCaption","uploadImage","childPath","auth","currentUser","uid","Math","random","toString","uri","route","params","image","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","console","log","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","creation","FieldValue","serverTimestamp","navigation","popToTop","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { StyleSheet, Text, View, TouchableOpacity, Button, Image } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport firebase from 'firebase'\r\nimport { fetchUserPosts } from \"../../redux/actions/index\";\r\nrequire(\"firebase/firestore\")\r\nrequire(\"firebase/firebase-storage\")\r\nexport default function Save(props) {\r\n    const [caption, setCaption] = useState(\"\");\r\n    const uploadImage = async () => {\r\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n        const uri = props.route.params.image;\r\n        const response = await fetch(uri);\r\n        const blob = await response.blob();\r\n        const task = firebase.storage().ref().child(childPath).put(blob);\r\n        const taskProgress = snapshot => {\r\n            console.log(`transferred: ${snapshot.bytesTransferred}`);\r\n        }\r\n        const taskCompleted = () => {\r\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n                console.log(snapshot);\r\n                savePostData(snapshot);\r\n            })\r\n        }\r\n        const taskError = snapshot => {\r\n            console.log(snapshot);\r\n        }\r\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted)\r\n    };\r\n\r\n    const savePostData = (downloadURL) => {\r\n\r\n        firebase.firestore()\r\n            .collection('posts')\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .collection(\"userPosts\")\r\n            .add({\r\n                downloadURL,\r\n                caption,\r\n                likesCount: 0,\r\n                creation: firebase.firestore.FieldValue.serverTimestamp()\r\n            }).then((function () {\r\n                props.fetchUserPosts();\r\n                props.navigation.popToTop()\r\n            }))\r\n    }\r\n\r\n    console.log(props);\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Image source={{ uri: props.route.params.image }} />\r\n            <TextInput\r\n                placeholder=\"Write a Caption . . .\"\r\n                onChangeText={(caption) => setCaption(caption)}\r\n            />\r\n            <Button title=\"Save\" onPress={() => uploadImage()} />\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}