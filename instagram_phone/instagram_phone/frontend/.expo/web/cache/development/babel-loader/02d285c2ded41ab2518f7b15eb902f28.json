{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\nodejs\\\\instagram_phone\\\\instagram_phone\\\\frontend\\\\components\\\\main\\\\Comment.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nexport default function comment(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setComments(comments);\n        setPostId(props.route.params.postId);\n      });\n    }\n  }, [props.route.params.postId]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').add({\n      creator: firebase.auth().currentUser.uid,\n      creatorName: props.route.params.commentor,\n      text: text\n    });\n    setText(\"\");\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, props.route.params.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: props.route.params.url\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: comments,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, item.creatorName, \":\", item.text));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"comment...\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return onCommentSend();\n    },\n    title: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 4\n  },\n  containerImage: {\n    flex: 4\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/Desktop/nodejs/instagram_phone/instagram_phone/frontend/components/main/Comment.js"],"names":["React","useState","useEffect","firebase","require","comment","props","comments","setComments","postId","setPostId","text","setText","route","params","firestore","collection","doc","uid","get","then","snapshot","docs","map","data","id","onCommentSend","add","creator","auth","currentUser","creatorName","commentor","styles","container","containerGallery","name","image","uri","url","item","StyleSheet","create","flex","containerInfo","margin","containerImage","aspectRatio"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Text, View, Image, FlatList, Button, TextInput } from 'react-native';\r\n\r\nimport firebase from 'firebase'\r\nrequire('firebase/firestore')\r\n\r\n\r\nexport default function comment(props) {\r\n    const [comments, setComments] = useState([])\r\n    const [postId, setPostId] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (props.route.params.postId !== postId) {\r\n            firebase.firestore()\r\n                .collection('posts')\r\n                .doc(props.route.params.uid)\r\n                .collection('userPosts')\r\n                .doc(props.route.params.postId)\r\n                .collection('comments')\r\n                .get()\r\n                .then((snapshot) => {\r\n                    let comments = snapshot.docs.map(doc => {\r\n                        const data = doc.data();\r\n                        const id = doc.id;\r\n                        return { id, ...data }\r\n                    })\r\n                    setComments(comments)\r\n                    setPostId(props.route.params.postId)\r\n                })\r\n        }\r\n    }, [props.route.params.postId])\r\n\r\n    const onCommentSend = () => {\r\n        firebase.firestore()\r\n            .collection('posts')\r\n            .doc(props.route.params.uid)\r\n            .collection('userPosts')\r\n            .doc(props.route.params.postId)\r\n            .collection('comments')\r\n            .add({\r\n                creator: firebase.auth().currentUser.uid,\r\n                creatorName: props.route.params.commentor,\r\n                text\r\n            })\r\n\r\n        setText(\"\")\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.containerGallery}>\r\n                <Text >{props.route.params.name}</Text>\r\n                <Image style={styles.image} source={{ uri: props.route.params.url }} />\r\n            </View>\r\n            <FlatList\r\n                numColumns={1}\r\n                horizontal={false}\r\n                data={comments}\r\n                renderItem={({ item }) => (\r\n                    <View>\r\n\r\n                        <Text>{item.creatorName}:{item.text}</Text>\r\n\r\n                    </View>\r\n\r\n                )}\r\n\r\n            />\r\n            <View>\r\n                <TextInput placeholder='comment...'\r\n                    onChangeText={(text) => setText(text)} />\r\n                <Button onPress={() => onCommentSend()} title=\"Send\" />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n\r\n    },\r\n    containerInfo: {\r\n        margin: 20\r\n    },\r\n    containerGallery: {\r\n        flex: 4\r\n    },\r\n    containerImage: {\r\n        flex: 4\r\n\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 1 / 1,\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}